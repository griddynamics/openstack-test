Feature: Do preparations to test Flat Networking

    Scenario: Create bridge for Flat Networking
        Given current user can execute sudo without password
        When I create bridge "{{flat_network.bridge.name}}"
        And I add interface "{{network_interface}}" to the bridge "{{flat_network.bridge.name}}"
        And I configure interface "{{flat_network.bridge.name}}" assigning address "{{flat_network.bridge.addr}}" and netmask "{{flat_network.bridge.netmask}}"
        Then interface "{{flat_network.bridge.name}}" has address "{{flat_network.bridge.addr}}"


#Feature: Start instance(s) in single node deployment using  python-novaclient CLI for Flat Network setup
#    In order to smoke test OpenStack build
#    As tester
#    I want to register start instance and verify it is up and available via SSH

    Scenario: Setup prerequisites
        Require setup "single-node ! novaclient-users ! novarc ! novaclient-network ! novaclient-images ! novaclient-keys"

    #Setup part

    Scenario: Configure OpenStack compute for Flat Network setup
            Given every RPM package is installed:
                | PackageName   |
                {% for package in packages_to_install %}
                | {{ package }} |
                {% endfor %}
            When I change flag file "{{nova.conf_file}}" by setting flag values:
                | Name                      | Value                                         |
                | --network_manager         | nova.network.manager.FlatManager              |
                | --flat_network            | true                                          |
                | --flat_injected           | true                                          |
                | --fixed_range             | "{{flat_network.cidr}}"                       |

            Then the following flags in file "{{nova.conf_file}}" are set to:
                | Name                      | Value                                         |
                | --network_manager         | nova.network.manager.FlatManager              |
                | --flat_network            | true                                          |
                | --flat_injected           | true                                          |
                | --fixed_range             | "{{flat_network.cidr}}"                       |


        Scenario: Restart OpenStack services for Flat Network setup
            Given every service is running:
                | ServiceName   |
                {% for service in supplementary_services %}
                | {{ service }} |
                {% endfor %}
            When I restart services:
                | ServiceName   |
                {% for service in openstack_services %}
                | {{ service }} |
                {% endfor %}
            Then every service is running:
                | ServiceName   |
                {% for service in openstack_services %}
                | {{ service }} |
                {% endfor %}


    Scenario: Create network for Flat Networking
        Given nova project "{{project.name}}" exists
        When I create nova network with the following parameters:
            | Parameter              | Value                       |
            | --bridge               | {{flat_network.bridge.name}}     |
            | --fixed_range_v4       | {{flat_network.cidr}}       |
            | --network_size         | {{flat_network.ips}}        |
            | --num_networks         | {{flat_network.nets}}       |
            | --label                | {{flat_network.label}}      |
        Then nova network "{{flat_network.cidr}}" exists

    #Test part
    Scenario: Start single instance and bind with pre-uploaded keypair for Flat Network setup
        Given novarc for project "{{project.name}}", user "{{user.name}}" is available
        And VM image "{{image.name}}" is registered
        And keypair with name "{{vm.keypair.name}}" exists
        When I start VM instance "{{vm.name}}" using image "{{image.name}}",  flavor "{{vm.flavor}}" and keypair "{{vm.keypair.name}}"
        Then VM instance "{{vm.name}}" comes up within "{{vm.boot_timeout}}" seconds
        And VM instance "{{vm.name}}" is pingable within "{{vm.ping_deadline}}" seconds
        And I see that "ssh" port of VM instance "{{vm.name}}" is open and serves "ssh" protocol within "{{vm.ssh_deadline}}" seconds
        And I can log into VM "{{vm.name}}" via SSH as "{{vm.user}}" with key "{{vm.keypair.private}}"

    #Teardown part

    Scenario: Configure OpenStack compute: restore Vlan setup
             Given the following flags in file "{{nova.conf_file}}" are set to:
                | Name                      | Value                                         |
                | --network_manager         | nova.network.manager.FlatManager              |
             When I change flag file "{{nova.conf_file}}" by setting flag values:
                | Name                      | Value                                         |
                | --network_manager         | nova.network.manager.VlanManager              |
             Then the following flags in file "{{nova.conf_file}}" are set to:
                | Name                      | Value                                         |
                | --network_manager         | nova.network.manager.VlanManager              |

    Scenario: Remove flags of Flat Network setup
         Given the following flags in file "{{nova.conf_file}}" are set to:
            | Name                      | Value                                         |
            | --flat_network            | true                                          |
            | --flat_injected           | true                                          |
            | --fixed_range             | "{{flat_network.cidr}}"                       |
         When I change flag file "{{nova.conf_file}}" by removing flag values:
            | Name                      |
            | --flat_network            |
            | --flat_injected           |
            | --fixed_range             |
         Then the following flags are not in "{{nova.conf_file}}":
            | Name                      |
            | --flat_network            |
            | --flat_injected           |
            | --fixed_range             |


    Scenario: Restart OpenStack services for Flat Network setup
        Given every service is running:
            | ServiceName   |
            {% for service in supplementary_services %}
            | {{ service }} |
            {% endfor %}
        When I restart services:
            | ServiceName   |
            {% for service in openstack_services %}
            | {{ service }} |
            {% endfor %}
        Then every service is running:
            | ServiceName   |
            {% for service in openstack_services %}
            | {{ service }} |
            {% endfor %}

#Feature: Perform clean up after Flat Network test

    Scenario: Delete bridge interface created by Flat Network setup
        Given interface "{{flat_network.bridge.name}}" exists
        When I delete bridge "{{flat_network.bridge.name}}"
        Then interface does not "{{flat_network.bridge.name}}" exist


    Scenario: Workaround for dnsmasq hang up
        I run commands:
            |  Command               | Expected  |
            |  sudo killall dnsmasq  |  noFail  |
            |  sudo service nova-network restart  |  noFail  |
